regex = /\d{3}-\d{4}/
regex.class # => Regexp

# =~ は正規表現と文字列を比較する場合によく使われる。
# =~を使うとマッチした場合はマッチした文字列の開始位置が返る（真）。マッチしないnilが返る。
'123-4567' =~ /\d{3}-\d{4}/
'hello' =~ /\d{3}-\d{4}/
# 反対でも同じ結果になる
/\d{3}-\d{4}/ =~ '123-4567'
/\d{3}-\d{4}/ =~ 'hello'

if '123-4567' =~ /\d{3}-\d{4}/
  puts "マッチしました"
else
  puts "マッチしませんでした"
end

# !~ を使うとマッチした時にtrue、マッチしなかった時にfalseを返す
'hello' !~ /\d{3}-\d{4}/
'123-4567' !~ /\d{3}-\d{4}/

text = '私の誕生日は1977年7月17日です。'
m = /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/.match(text)
puts m[0]
puts m[1]
puts m[2]
puts m[3]
puts m[2, 2]
puts m[-1]
puts m[1..3]
puts m[:year]
puts m[:month]
puts m[:day]
puts m['year']

# この際は、正規表現を右に持ってくるとエラーが起きる
# 正規表現リテラルを直接左辺に置く必要がある
if /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/ =~ text
  puts "#{year}/#{month}/#{day}"
end

# Stringメソッドとの組み合わせ
# scan 引数で渡した正規表現にマッチする部分を配列に入れて返す
'123 456 789'.scan(/\d+/)
'1977年7月17日 2016年12月31日'.scan(/\d+年\d+月\d+日/)

# [] 最初にマッチした部分を抜き出す。
test = '123-4567 456-7890'
text[/\d{3}-\d{4}/]

text = '私の誕生日は1977年7月17日です。'
# 第２引数で何番目のキャプチャを取得するのかを指定できる
puts text[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, 3]
# シンボルでキャプチャの名前を指定する
puts text[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, :day]
# 文字列でキャプチャの名前を指定する。
puts text[/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, 'day']

# slice は[]のエイリアスメソッド
puts text.slice(/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, 3)
# slice! はマッチする部分が文字列から破壊的に取り除かれる
text.slice!(/(\d+)年(\d+)月(\d+)日/)
puts text

# split は正規表現を渡すとマッチした文字列を文字にして文字列を分解し、配列として返す
text = '123,456-789'
# 文字列で区切りもじを指定する
# 正規表現を率いてカンマまたはハイフンを区切り文字に指定する
puts text.split(/,|-/)

# gsub は第1引数の正規表現にマッチした文字列を第2引数の文字列で置き換える。
puts text.gsub(',', ':')
# 正規表現で表した場合
puts text.gsub(/,|-/, ':')
# キャプチャをしようした場合
text = '私の誕生日は1977年7月17日です。'
puts text.gsub(/(\d+)年(\d+)月(\d+)日/, '\1-\2-\3')
# 名前付きキャプチャの場合、\k<name>と記入
puts text.gsub(/(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/, '\k<year>/\k<month>/\k<day>')
# 第2引数にハッシュを渡して、変換ルールを指定することができる
text = '123,456-789'
hash = { ',' => ':', '-' => '/'}
puts text.gsub(/,|-/, hash)
# ブロックの戻り値で置き換える文字列を指定する
puts text.gsub(/,|-/) {|mached| mached == ',' ? ':' : '/'}
# gsub! は文字列の内容を破壊的に置き換える
text.gsub!(/,|-/, ':')
puts text